/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        homerow_mods_left: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        homerow_mods_right: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        nvim_save_exit: nvim_save_exit {
            compatible = "zmk,behavior-tap-dance";
            label = "NVIM_SAVE_EXIT";
            #binding-cells = <0>;
            bindings = <&nvim_save>, <&nvim_save_quit>, <&nvim_save_quit_all>;
        };

        resize_browser: resize_browser {
            compatible = "zmk,behavior-tap-dance";
            label = "RESIZE_BROWSER";
            #binding-cells = <0>;
            bindings = <&kp LG(MINUS)>, <&kp LG(PLUS)>;
        };

        tapdance_space_colon: tapdance_space_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_SPACE_COLON";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp COLON>;
        };

        tapdance_cmd_cmdbacktick: tapdance_cmd_cmdbacktick {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_CMD_CMDBACKTICK";
            #binding-cells = <0>;
            bindings = <&kp LCMD>, <&kp LG(GRAVE)>;
        };

        tapdance_layer_switch: tapdance_layer_switch {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_LAYER_SWITCH";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 2>, <&to 2>;
        };

        tapdance_numbers_layer: tapdance_numbers_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_NUMBERS_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 3>;
        };

        tapdance_tmux_and_symbol: tapdance_tmux_and_symbol {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_TMUX_AND_SYMBOL";
            #binding-cells = <0>;
            bindings = <&kp LC(A)>, <&kp GREATER_THAN>;
        };

        homerow_amethyst: homerow_amethyst {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_AMETHYST";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <14 15 16 18 21 20 19 31 30 25 7 8 5>;
        };
    };

    macros {
        browser_reset_size: browser_reset_size {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(PLUS) &kp LG(NUMBER_0)>;
            label = "BROWSER_RESET_SIZE";
        };

        nvim_save: nvim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W &kp RETURN>;
            label = "NVIM_SAVE";
        };

        nvim_save_quit: nvim_save_quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W &kp Q &kp RETURN>;
            label = "NVIM_SAVE_QUIT";
        };

        nvim_save_quit_all: nvim_save_quit_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W &kp Q &kp A &kp RETURN>;
            label = "NVIM_SAVE_QUIT_ALL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC                  &kp Q  &kp W                             &kp E                          &kp R                      &kp T             &kp Y       &kp U                       &kp I                            &kp O    &kp P                      &kp DELETE
&kp TAB                  &kp A  &homerow_amethyst LS(LEFT_ALT) S  &homerow_mods_left LEFT_ALT D  &homerow_mods_left LCMD F  &kp G             &kp H       &homerow_mods_right RCMD J  &homerow_mods_right RIGHT_ALT K  &kp L    &kp BACKSPACE              &kp LA(NUMBER_1)
&tapdance_numbers_layer  &kp Z  &kp X                             &kp C                          &kp V                      &kp B             &kp N       &kp M                       &kp COMMA                        &kp DOT  &tapdance_cmd_cmdbacktick  &kp LC(A)
                                                                  &kp LCTRL                      &tapdance_layer_switch     &kp LEFT_SHIFT    &kp RETURN  &tapdance_space_colon       &kp LS(LA(LCTRL))
            >;
        };

        code {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR            &kp PERCENT        &kp CARET           &kp AMPERSAND      &kp MINUS        &kp UNDERSCORE         &kp ASTERISK      &kp PLUS              &browser_reset_size
&trans           &kp SLASH    &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE     &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp NON_US_BACKSLASH  &kp RETURN
&kp CAPS         &kp TILDE    &kp GRAVE      &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES  &kp EQUAL           &kp COLON          &kp SEMICOLON    &kp PERIOD             &kp QUESTION      &kp PIPE              &resize_browser
                                             &trans                &trans             &trans              &kp F1             &kp F2           &kp F3
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC  &trans          &trans     &trans        &trans     &trans           &trans  &trans     &kp UP_ARROW  &trans     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans   &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LCMD   &kp LG(GRAVE)    &trans  &kp LEFT   &kp DOWN      &kp RIGHT  &kp BACKSPACE      &kp ENTER
&mo 3    &kp LG(Z)       &kp LG(X)  &kp LG(C)     &kp LG(V)  &trans           &trans  &trans     &trans        &trans     &trans             &trans
                                    &trans        &trans     &trans           &to 0   &kp SPACE  &trans
            >;
        };

        numbers-media {
            bindings = <
&kp ESC  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_VOLUME_UP    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp PLUS
&trans   &trans                &trans                &trans        &trans            &trans        &kp K_MUTE         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH  &kp ASTERISK
&to 0    &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_CLR    &kp C_VOLUME_DOWN  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA  &kp EQUAL
                                                     &trans        &trans            &trans        &kp RET            &kp NUMBER_0  &kp NUMBER_0
            >;
        };
    };
};
