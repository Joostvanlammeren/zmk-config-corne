/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC              &kp Q  &kp W  &kp E     &kp R  &kp T    &kp Y    &kp U      &kp I      &kp O     &kp P         &kp BSPC
&kp TAB              &kp A  &kp S  &kp D     &kp F  &kp G    &kp H    &kp J      &kp K      &kp L     &kp UP_ARROW  &kp LA(NUMBER_1)
&mt LEFT_SHIFT CAPS  &kp Z  &kp X  &kp C     &kp V  &kp B    &kp N    &kp M      &kp COMMA  &kp LEFT  &kp DOWN      &kp RIGHT
                                   &kp LGUI  &mo 1  &mo 2    &kp RET  &kp SPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR            &kp PERCENT     &kp CARET           &kp AMPERSAND      &kp MINUS        &kp UNDERSCORE         &kp ASTERISK      &kp PLUS              &kp LG(KP_PLUS)
&trans           &kp SLASH    &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp NON_US_BACKSLASH  &kp LG(N0)
&trans           &kp TILDE    &kp GRAVE      &kp DOUBLE_QUOTES     &kp SQT         &kp EQUAL           &kp COLON          &kp SEMICOLON    &kp DOT                &kp QUESTION      &kp PIPE              &kp LG(MINUS)
                                             &kp LGUI              &trans          &trans              &kp RET            &kp SPACE        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_PREV      &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_NEXT    &trans  &trans    &kp UP_ARROW  &trans     &trans  &trans
&kp C_VOL_DN          &kp C_VOL_UP          &kp LEFT_SHIFT  &kp LCTRL   &kp LEFT_ALT      &kp LCMD      &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
&trans                &trans                &trans          &trans      &trans            &trans        &trans  &trans    &trans        &trans     &trans  &trans
                                                            &trans      &trans            &trans        &trans  &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans    &trans   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp PLUS
&trans        &trans        &trans        &trans        &trans        &trans    &trans   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH  &kp ASTERISK
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA  &kp EQUAL
                                          &trans        &trans        &trans    &kp RET  &kp NUMBER_0  &kp NUMBER_0
            >;
        };
    };
};
